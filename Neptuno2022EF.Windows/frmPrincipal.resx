<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCurrenstAccounts.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABLTSURBVGhDpZkHeJZVlsfv971fEokKSFFRqlJXCQQCJISO
        BAidgIBAkBBFpEuRLgiRJh0EqSqIDUTWgsyO7uqOozPiKi0QMKRQghAIhNAT3v3939y4iriWeef5Pefc
        c8897d4PeBzzR74yb+03pd7eb1xz3ZR9Y7+56539fnBCt+82d76716PE1n3m7s0HTPAH34UW+/c9FYpt
        31M9dPuewG3v7w4OeX93icBH3/pA+15MxbvrnX3mvo37Tcl39jl3bCuMU/qtZHPb+3vKcL4mcSo7H38b
        KP7uPm+v1NvJPs74Sm7Zpxq8GL/7U+EmfZ8x7qemzJv7/WXeTPaTmOT7jf/jXQ4JomACvHfntr0ZkA+u
        oLgy2OPsuhUYcIjhFVHq7X0q3K/C7ti2R76T2T9o/YvIxf4WNFfxxbeqof1+nVec3/zuff0AE042d7+R
        bO55PdmH7pTmZnSYxLVgHmSBW6KQ09zKX2E1zILxEALh1lYFdHOaqmIwpGSfCkLvAXlenK37voWF8AxM
        ha3Y85UHNhbfui9UDVGLn/O22l/57n/toHlg3WElMuU2HXAk1RSHa8MWcClA/DeMgJr3bkoJun37Hm9i
        JL+JvaY4T0PoCdVZkqrY3K5X0LDShbGSoXHQjv8xt7+31wQ+2m14muh7dGul2ZsPLv674E49d877bMm/
        /Cq+ctBUePWgqbQhhYYOODSiWwilkcXcjksBYjnUYlL2iVAQN3XbB9+qWIepBWhIqDGfp9tGKq9L0VAc
        e9sxNuZfKrya4j2xe3gJ3Nhd2C7ABL2M9pPT1LCa7wUuZ7YjTdnNv/IbqUISNSAqbjjoL//aAd1IFBwF
        l6AboWJZihbFt+zVMwmAV0Thb2efKc7Vl9gC6IUUrp0P9ygeP3CPAPoRyEIvpsY6TDxh7t104HZsY5UP
        PoVaD6yl+TeSg3jiOj/J7vUAW/lPvqqrD5kH1h4ylden+B5Yk+KjEVP+1YOJ4PLUcridtpqOYBr8YPf7
        NaVaLx32zj645pAfnN/AX2l9SrAaIW4PxYY+5XnK3KqvwqsH7mS9y9ovWyniwfOptOFgAP0EfC3bz74a
        qwqLUedVXz7kszczFdyKG1I+R5bW74YJOEzFX231YVPt5UNF+MpTGEX+LpTHxt8MF6F49OxjrL3n3Adc
        nnc/mi1DoVUZ6Ffs7dCThwCDkN9c+UEl24Ix/7ZCP+q9XvDqqw5rqrqZqTTlwpvF30vWQU0wEPjgG1Nu
        Y7LXQM2VhxnAIb+ar/TKwSDOdYGuD65N6fLgWnRP/gL28VmTEsu5TPiHzkOQlV3AJc4MaAYxNF4OqT3l
        8vJBnPygrW3DmDD+BKm7+IipsfKwQyMqMhFceLPKOqa4OkXPzdEkuB3z0PLvPWqtOOyvtirF1F6arjPv
        VFvtnfmjbAPDWafKem588x7d2KabfK5Dy+qFtx8Ekq1Ae3FeE2ogbGkqt/K9U5O3DlFM2oXPy/FcaE6B
        vSnoxuouTvUaf3jZ937516EJ5FZ7pgD/YdAUYqDNr6C9Zvinwdeg35k/zeSZh5YdDjCgUtVXHQqHKIhm
        /zR8qQY458gfeoJyxph6C46YL/lHB9P12SmHwlHIeXj596VpjmmnBjWYn+ZrOC/d1F+QZsIXHTF1Fqf6
        acRELErTme3gwheSDy9LraUGq9A4z4fb1O+CJ1tYhIcKqvWSl+9VuAIl9btBilgoIP4A8tzLkGuwPga7
        CgeYGrB+C0B5yxsV5/I/DjhygsXgQlsa0KQdNeux8IjXCNKPv2k4N13+73r+S1OfQHazegP5KjYD+JEm
        SZm69QBN+JHBdRkI/p29M0tSHwed0YDuIMZXNpb2Clma2kk19Rl2Ws2EYMuGvwHvyjUmnMI0ZagNLmxU
        kto8nfX3uSp8NnTEz0S8mObUW5hmGs/hZhYeedf6T5E/Mt6ua+FfBTbCJiu3QBvwBoGPhqfb9qEnw1li
        lCC+N9jIORkOtkGgeB/w/CvoxhhkwHsV1GT3YsF4/0xgWn4FgC3gQkVNMGwJT2d+WkVrexlMM/6IbDIr
        Xb7vWftkTak+N4b+uLVVhWZWvwg/WH0cmEbz0kO4HX+juenBKgJbke/fiVMsak6Gd/NRc9LVWHqDF9NG
        aAA9R53SWfk/Yf3Xey9kwRGfiZybroAGaoELy7XGHojmKTSenaHD9xO0pBI0m+L5vovN5RkMiZyTbpo/
        f9REFfrF2RhVIVI6cXpCJWsfiW6azso00S9keEhXDM7GW59MfDrqVhTXfPWdiZl83DSbeVQ1lYe11k+x
        lU/1BFSoo2JhHrhQS2ubKBFm1mcasjWdeTSo8QsZWzy/FzIOszcepsvH6ttsjBoQZf06YC9l7SNAcSfA
        DJgGs6A3g1KOtpAlX2wp8ApMhfnwGbEUQyyFU/Cf2BXPZ5omUWBSpsNksuBzTeiRaceYgGc7Ael0HpAd
        6oMLeXDJ6jdTADUhyq47w91WH6rpI+Wj9Q0r/9L8+cJbIm+ktR1rOisju1DPyIc0WMO6fhPVPCtzkfWr
        DMa0mHEUMqPAhRFat/RsR9vLhj6gBUkKbZlh1m90s5kZpZCVkaUbzUsrFjnX4/bGs9PvavWc59va+naC
        slYfqljEvoa+Br00MpP1h8rbepp3rp58lbfDlMM+fCqxvrf9pExHf+pF00Sr6Z5fE/nBYDCmNUlhArhQ
        8xGCWdt6ayv7iNaF9tqy4dNbwVoSoM3UY9WhL/SAntCn3aRjQfi1sOc7QVmrDwXFcYm3QDHQ02CntYsI
        kG+C1pq+mm89PVO6o5fShhfDq7mN/Vx4W34mZsox8R6cbjvleLDWbScfD2o75VgG+md237EyDFyIbzfp
        uGnHjxB9rrX9lNqcj7R6Jyhr9aHYdUb6EsVAKs9OkC7qg/YHUYcGGNRsVoaPwn2dx53wdxp/ws85n/bw
        +RhOKI6JnXhcZMBfpStR+4nH70d3YQa61kHagzBr72/tsk2Vrf2k41HIcXa/KmgtvTOUtfpQ/HRG+mJ7
        Ph12/iRefbufAAZ/f9cxWb7opHRDEx4dnz0RZH1ftL73aCMUCmBNR5w6j8uSYydwoZc9HGJlGLj49WfP
        dJhwXLYZsj3dN9eH7MKei6wGja3eGe62+rA2PFGk9CX2fAbslK6Y+NW3+wmg/UCXsVn6O0Xxo+GhHqN+
        kF0MAfk2MDhV6Do2y4UkMNALCqztMFTpNuak/LQXZu3xTMl0H+3ZJ8lWe/lBP3oX6Z3Hn7i/y7iscOnY
        Yijydqsnqgj0AvT59vwR+FC68rAXIV9IAO/vEGQo7LR2MV35ORdn1+1M3OiT1cGFcd2fOan1WYJ+1+2Z
        rD5I2ddYuwgD2Xr3GHWyGHITHLG29+Ebq38Cf7P6P2GH1ffBNqtnwFbIhzPwMTEfIGctdO0ngDcs5FOq
        hTqGIt/09kedLIts6umjT3Y3j474oQa4MAa0zocPew8/9SDyOrzdS/aR3l4YyPfRniN/KAGHIJ29fcij
        kGb1TMhA3699yOJMCmv5/IB+CD3D6t/DYfSrUAe9OihHAj7KKcbKRk3RyCTp+FZCNpYOcfxL8lQlcGEm
        aD3ZrsXV3sNORfUe/oPsIsza+2M3iQlnnCcHnvH3G3LKeaVevhneN8fX7+lTgRkd8syzced92AOTu+Wa
        vk+fNv2fOm36DTn9/+qPDfVyRNgcCWA0RHLdh37I2sVm7UFnu45VkOLgwksK2GFiloK2gVFQsw/B+1Kc
        9iDM+va3awpH3gIVJh8K9cM0WAlLYdktWALroRxnHgLlSNB5cgeDYjW09tVquG9h/kRrizLxg0+bAU9m
        n4QPBjzpHfTroD2safgefzLbz778wsCF/lrHP3Xa4VqLrv9ncN6XMOiM4ocMGHz6CLi/g4bErWZzJCgH
        BJNfsq21d7F2kWRtFUxC4hnxH5A+8Ils3yCS04BDIQE1NazvOe8JDUzMll8YuNAftHYkb/Wtq3LtDxE7
        LcvLTbz6oBwJip2QmB1sc08rtGdXG5RwxljbNshJTDzrM08MPCNmggsVtH5qwFn/8MdyHPFa1WtmYEK2
        msHvbLj16y8/cCRv9T35+Nki/BAPo2E4jLgFw+BZKEm82qAcCYqNLSAJ/4BU/SZVS2LC2SDWWbBD++ap
        +LMiBlyIH0zyp+JzuIkcM+yxHDOu+3mTOOhs8FDWBK1U5Ieuc87k9hfMqF7nbfn/97FXRDAcA537LRpB
        VasngBkCgwecrWJtC2Sz1LG2sVobFTy0X04o5MH24Y+dM088nh2EvTu8BXvhCOyCj/Bxobf8RvQ5FzQu
        7rx55tHzZkzPnzdjkxVRDipCBSt/5On+ObWgBgVX0UCIHW5zJIBhTzWutLYw2SzPWVttrc3IPuf8FKSi
        XoUbrPtBMroLefANfALfwgVw2U8d2ftc9GgSj+mZy+2dNSO4vfH8UVv0sV+ED6LgEWgJrX5CS/03gzE9
        ckPROxErQPw6ygEJ4MVALoA3Rjx23sQnHjfDHzvrY50Ku0cw0CHxNMIU/JoERTUc/ej5fHDhBLY+BC6h
        ybPmcA6Tzy2NfSDrM/LjJvrjY8b2yPXPaH/ZTOqSZ9sw3hlLCOTJ/5b0Ol8d2cGuo+BBqycoNsWGjup1
        zkzsetHB5gPFjLU+g+3aMeO75zrj4nINdKcgF3agF2PqKlA0HBuXu4uphSmwJoStBHwBLr4x9rwzoesF
        M7VjYTP2rPBBA2gBzW6iKdwGJaEdg3GQdUF1PGpj50Lk+O4XzHhyKBd7X0EO3AFeDqPkUOrZbhcuwMGp
        nS4qmGk/4ZhvSqeLBtsYcGHI5E55JnFgtl/7E7tcKIYtE05yPlRx0H3TYy/e3MjvQr8xFUuMCFC+Pqwb
        If/JsCvrdzihm7ffw+6PBq2dvsOyjJnUOU9MAndy57xoPY8KG1IMeln4O8hexCdQnB+fT37o7XUOhmk9
        tePFoJltL/tmtr3kex6kP9/ukm9i1wsBGr0l02Mv+TnnxyeE4ShmhI05CBt/7GZ7TxQ7T/fCHdhPQyoE
        wLM/iY+Z1uGimdrh4gGCfasbYCOALtuLSHdKx7xnpnTK68aTmYrNxX+69vFz7Nk01l8+x01QuKFwM+NP
        MCvmslEM8oQpDyQovuqZFnvR0R7rjaoJWqkG6nJ0S7pJM6P9pTLgwkLQOsTKjeBSXNXZba7ePivmSnGC
        VYRy0wgyvf1Fx/ptgAvwEJSDSlDxT1CZPzBKI2OnkxcGggYTwu0qzwiQfbaeL005xi2vp+U9ZU2iJrgw
        flbMJTMz5lIwT4PpXmqM7YbdK6TN5dX9Rp0ws1tf0TkHJKfZ/Xwr/xV+mm+IGnjhES9HnGzUtnMGtkXN
        r6o+7JeMfrfeN/uRy5XBhedA6wCF+me3JkCby9UJNAWmwxqQ32gFhyBJ1vPBRV8Az8MLkPQvMBPmQsSc
        VlcY2uWeoPh7qCsUqcb8eo56bj9+81pcCZrX8koubJ3b8oqZ3+Jq0LwWV7FfHQtbVzS6HqQbeLH51bL4
        uLCKM4V++MNncCSpjdecSSps8k+hGJq08hFftY20OXfDXWoMP16C9+RsB/Zb0OyqeAvyKbaUnJEiDptr
        OVqkv9jsalPtKxF6eWtfs6jpNTO31ZUQGglQ0G9j/SgsMKf1lQAxQ+a2uhq0PPK6GihJzE029s6FTa+F
        zmd41ObopXDOJNHMz77FTa6ZxdHXmoML85c0vm6WRl0P1u0sanKtJXyqPeROaKLbWBZ1PUh+2NfYc+Gg
        tX955DUb+effyxH55uUG+WaVZESBt17VIN+/skG+s6jZFaMGVja4oRg94DQo52zd1MKmGtwVh1uhGZ4z
        N/aLj6J9FKbiNoILvVY0zDfzm1/1E0gJ2si+vFF+YzXNVPwrGuXLP9H6LwetPfva8Btmdb0C4ayud8Mn
        fU29G3501rIVBPDBV4Xne4wckGWWRV6Pha9szFTqaqX868JdvRg/qCY9eVv5TR/JfSrgpUb5oS81zN8F
        Lkxa2vhaEAWYF9pcDqaZuvp7Q2v029hPsn7/tbJRQYCzXpxVDZh0fU2bRpBeQ5I3oTiLo68EOF+HRqYh
        U228c8QZva6eG6ARvQiHZyXp3cqiptdt1bf4mIIhAFdMknoFd1LEexTjwgmSzoWuTLMRsjssxJ7t7UcU
        bF4dfiNExeu8nobXhIhg8vULEqE+qPho6AKDIAm24Zdl47irIgp2w2Di3aGhruKJLW183dH/R7K4yXWz
        hGf7m58KoBBdMddPUVz1mvAbPbj+r8G9BV+w33Elb5wGvXM6v4I47PnArK17427ru9Rbh984Y9dF5BBj
        B4xFr61h0og3BBpxlkd6Nww8WfTf9akILwggfbpSEni2DWFupfV13LYQBzGsy8tP+95Twr/wHEmJg4/H
        ujpuMDIKqlhbO+gEkcSo8NE9ro9b8Z6YmBqbpx++w1B8rz/ser8z1fX7P2P+F0w7TUm6/LizAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>